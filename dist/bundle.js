/*
 * ATTENTION: The "eval" devtool has been used (maybe by default in mode: "development").
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (() => { // webpackBootstrap
/******/ 	var __webpack_modules__ = ({

/***/ "./public/js/map.js":
/*!**************************!*\
  !*** ./public/js/map.js ***!
  \**************************/
/***/ (() => {

eval("async function initMap() {\r\n    // inisiasi variabel area unnes dan center dari map\r\n    const unnes = { lat:  -7.049756, lng: 110.396445 }\r\n    const map = new google.maps.Map(document.getElementById(\"map\"), {\r\n        zoom: 16,\r\n        center: unnes,\r\n    });\r\n\r\n    let area = [\r\n        {lng: 110.3897028, lat: -7.0480879},\r\n        {lng: 110.3894307, lat: -7.0486949},\r\n        {lng: 110.3894629, lat: -7.0494717},\r\n        {lng: 110.3894629, lat: -7.0500676},\r\n        {lng: 110.3899459, lat: -7.0504826},\r\n        {lng: 110.3905609, lat: -7.0508049},\r\n        {lng: 110.3906231, lat: -7.0509801},\r\n        {lng: 110.3906212, lat: -7.0512351},\r\n        {lng: 110.3906385, lat: -7.0514444},\r\n        {lng: 110.3906447, lat: -7.0517338},\r\n        {lng: 110.3907174, lat: -7.0521066},\r\n        {lng: 110.3910354, lat: -7.0524522},\r\n        {lng: 110.3911246, lat: -7.0525770},\r\n        {lng: 110.3911525, lat: -7.0526481},\r\n        {lng: 110.3910314, lat: -7.0529170},\r\n        {lng: 110.3908509, lat: -7.0531674},\r\n        {lng: 110.3907838, lat: -7.0534267},\r\n        {lng: 110.3909210, lat: -7.0536985},\r\n        {lng: 110.3917732, lat: -7.0536679},\r\n        {lng: 110.3920965, lat: -7.0535307},\r\n        {lng: 110.3923935, lat: -7.0533421},\r\n        {lng: 110.3925521, lat: -7.0529202},\r\n        {lng: 110.3924919, lat: -7.0523212},\r\n        {lng: 110.3926487, lat: -7.0521300},\r\n        {lng: 110.3931767, lat: -7.0520680},\r\n        {lng: 110.3934625, lat: -7.0514680},\r\n        {lng: 110.3939396, lat: -7.0517278},\r\n        {lng: 110.3940829, lat: -7.0517910},\r\n        {lng: 110.3944643, lat: -7.0518149},\r\n        {lng: 110.3946198, lat: -7.0518011},\r\n        {lng: 110.3947459, lat: -7.0516433},\r\n        {lng: 110.3947009, lat: -7.0508550},\r\n        {lng: 110.3948288, lat: -7.0505781},\r\n        {lng: 110.3949317, lat: -7.0504662},\r\n        {lng: 110.3953330, lat: -7.0493320},\r\n        {lng: 110.3956154, lat: -7.0494161},\r\n        {lng: 110.3954051, lat: -7.0503978},\r\n        {lng: 110.3955415, lat: -7.0504114},\r\n        {lng: 110.3956742, lat: -7.0503874},\r\n        {lng: 110.3958298, lat: -7.0503790},\r\n        {lng: 110.3958072, lat: -7.0501141},\r\n        {lng: 110.3961393, lat: -7.0502485},\r\n        {lng: 110.3962466, lat: -7.0505677},\r\n        {lng: 110.3970089, lat: -7.0505771},\r\n        {lng: 110.3970841, lat: -7.0509496},\r\n        {lng: 110.3978784, lat: -7.0510134},\r\n        {lng: 110.3981789, lat: -7.0513007},\r\n        {lng: 110.3987371, lat: -7.0518966},\r\n        {lng: 110.3988981, lat: -7.0520030},\r\n        {lng: 110.3988444, lat: -7.0523967},\r\n        {lng: 110.3988551, lat: -7.0526946},\r\n        {lng: 110.3990240, lat: -7.0530672},\r\n        {lng: 110.3992262, lat: -7.0530959},\r\n        {lng: 110.3993207, lat: -7.0531183},\r\n        {lng: 110.3994146, lat: -7.0531327},\r\n        {lng: 110.3994920, lat: -7.0531365},\r\n        {lng: 110.3995054, lat: -7.0532654},\r\n        {lng: 110.3995494, lat: -7.0534032},\r\n        {lng: 110.3998342, lat: -7.0535247},\r\n        {lng: 110.4002493, lat: -7.0535594},\r\n        {lng: 110.4008009, lat: -7.0533154},\r\n        {lng: 110.4013334, lat: -7.0530167},\r\n        {lng: 110.4016769, lat: -7.0522187},\r\n        {lng: 110.4019410, lat: -7.0522631},\r\n        {lng: 110.4021664, lat: -7.0526568},\r\n        {lng: 110.4032290, lat: -7.0531995},\r\n        {lng: 110.4036261, lat: -7.0532740},\r\n        {lng: 110.4038735, lat: -7.0533509},\r\n        {lng: 110.4042538, lat: -7.0527118},\r\n        {lng: 110.4046136, lat: -7.0519971},\r\n        {lng: 110.4041521, lat: -7.0519758},\r\n        {lng: 110.4037335, lat: -7.0518481},\r\n        {lng: 110.4029821, lat: -7.0511139},\r\n        {lng: 110.4022415, lat: -7.0505713},\r\n        {lng: 110.4014150, lat: -7.0498796},\r\n        {lng: 110.4010428, lat: -7.0494126},\r\n        {lng: 110.4006993, lat: -7.0490242},\r\n        {lng: 110.4001626, lat: -7.0484603},\r\n        {lng: 110.4000606, lat: -7.0484177},\r\n        {lng: 110.3998406, lat: -7.0487582},\r\n        {lng: 110.3995240, lat: -7.0483804},\r\n        {lng: 110.3987833, lat: -7.0481197},\r\n        {lng: 110.3971591, lat: -7.0473781},\r\n        {lng: 110.3970723, lat: -7.0473130},\r\n        {lng: 110.3968756, lat: -7.0473498},\r\n        {lng: 110.3965834, lat: -7.0474162},\r\n        {lng: 110.3965011, lat: -7.0475231},\r\n        {lng: 110.3964468, lat: -7.0476051},\r\n        {lng: 110.3962099, lat: -7.0475699},\r\n        {lng: 110.3960728, lat: -7.0476263},\r\n        {lng: 110.3960599, lat: -7.0477979},\r\n        {lng: 110.3960564, lat: -7.0479132},\r\n        {lng: 110.3959796, lat: -7.0480148},\r\n        {lng: 110.3958800, lat: -7.0482129},\r\n        {lng: 110.3956780, lat: -7.0483191},\r\n        {lng: 110.3952335, lat: -7.0483224},\r\n        {lng: 110.3951512, lat: -7.0483095},\r\n        {lng: 110.3951029, lat: -7.0483123},\r\n        {lng: 110.3949435, lat: -7.0480419},\r\n        {lng: 110.3949583, lat: -7.0480251},\r\n        {lng: 110.3949361, lat: -7.0480043},\r\n        {lng: 110.3949031, lat: -7.0479262},\r\n        {lng: 110.3948290, lat: -7.0476512},\r\n        {lng: 110.3947426, lat: -7.0473481},\r\n        {lng: 110.3942834, lat: -7.0471648},\r\n        {lng: 110.3940014, lat: -7.0470567},\r\n        {lng: 110.3939221, lat: -7.0470157},\r\n        {lng: 110.3938988, lat: -7.0467651},\r\n        {lng: 110.3938941, lat: -7.0464715},\r\n        {lng: 110.3932501, lat: -7.0465725},\r\n        {lng: 110.3929334, lat: -7.0465938},\r\n        {lng: 110.3926865, lat: -7.0466311},\r\n        {lng: 110.3926122, lat: -7.0467545},\r\n        {lng: 110.3926122, lat: -7.0470099},\r\n        {lng: 110.3926336, lat: -7.0474143},\r\n        {lng: 110.3926283, lat: -7.0478612},\r\n        {lng: 110.3925263, lat: -7.0481166},\r\n        {lng: 110.3922842, lat: -7.0482244},\r\n        {lng: 110.3919091, lat: -7.0482868},\r\n        {lng: 110.3915687, lat: -7.0482850},\r\n        {lng: 110.3912655, lat: -7.0481801},\r\n        {lng: 110.3909328, lat: -7.0481695},\r\n        {lng: 110.3903478, lat: -7.0481322},\r\n        {lng: 110.3900365, lat: -7.0480524},\r\n        {lng: 110.3898701, lat: -7.0479673},\r\n        {lng: 110.3897758, lat: -7.0479384},\r\n        {lng: 110.3897085, lat: -7.0480829},\r\n        {lng: 110.3897028, lat: -7.0480879}\r\n    ]\r\n\r\n    let polygon = new google.maps.Polygon({\r\n        paths: area,\r\n        strokeColor: \"#0000FF\",\r\n        strokeOpacity: 0.8,\r\n        strokeWeight: 2,\r\n        fillColor: \"#0000FF\",\r\n        fillOpacity: 0.1,\r\n    });\r\n    // menampilkan area unnes\r\n    polygon.setMap(map);\r\n\r\n    // fetch data cctv dari database dengan API getCctvs\r\n    const getCctvs = async () => {\r\n        try {\r\n            const response = await fetch('/cctv');\r\n    \r\n            if (!response.ok) {\r\n                throw new Error(`HTTP error! status: ${response.status}`);\r\n            }\r\n    \r\n            const data = await response.json();\r\n            return data;\r\n        } catch (error) {\r\n            console.log(error);\r\n        }\r\n    }\r\n\r\n    const cctvs = await getCctvs();\r\n  \r\n    // menampilkan cctv pada map\r\n    let currentInfoWindow = null;\r\n    for (let i = 0; i < cctvs.length; i++) {\r\n    try {\r\n        // menentukan icon cctv sesuai jenisnya\r\n        let iconbase;\r\n        if (cctvs[i].type === \"street\"){\r\n            iconbase = \"/img/street_icon_marker_cctv1.png\"\r\n        }\r\n        else if(cctvs[i].type === \"building\"){\r\n            iconbase = \"/img/building_icon_marker_cctv.png\"\r\n        }\r\n        \r\n\r\n        // membuat marker cctv\r\n        const marker = new google.maps.Marker({\r\n            position: {lat: parseFloat(cctvs[i].lat), lng: parseFloat(cctvs[i].lng)},\r\n            map: map,\r\n            icon: iconbase,\r\n        });\r\n\r\n        // membuat fungsi info window untuk cctv\r\n        function createCustomInfoWindow(content){\r\n            return new google.maps.InfoWindow({\r\n                content: content,\r\n                maxWidth: 300,\r\n            });\r\n        }\r\n\r\n        // membuat fungsi createbutton untuk info window\r\n        function createButton(buttonText, buttonId, buttonClass) {\r\n            const button = document.createElement(\"button\");\r\n            button.setAttribute(\"type\", \"button\");\r\n            button.setAttribute(\"class\", buttonClass);\r\n            button.setAttribute(\"id\", buttonId);\r\n            button.innerHTML = buttonText;\r\n            return button.outerHTML;\r\n        \r\n        }\r\n\r\n        // content atau isi dari info window\r\n        let content = `\r\n        <div id=\"content\">\r\n        <div id=\"siteNotice\">\r\n        </div>\r\n        <h1 id=\"firstHeading\" class=\"firstHeading\">${cctvs[i].nama}</h1>\r\n        <div id=\"bodyContent\">\r\n        <p>${cctvs[i].content}</p>\r\n        <p>pilih jenis cctv</p>\r\n        ${\r\n            cctvs[i].type === \"street\" ? createButton(\"CCTV NORMAL\", \"cctvnormal\", \"btn btn-primary\"):\r\n            cctvs[i].type === \"street\" ? createButton(\"CCTV THERMAL\", \"cctvthermal\", \"btn btn-primary\"):\r\n            cctvs[i].type === \"street\" ? createButton(\"CCVT HELM Recognition\", \"cctvhelm\", \"btn btn-primary\"): \r\n            cctvs[i].type === \"building\" ? createButton(\"Denah Gedung\", \"denahButton\", \"btn btn-primary\") :\r\n            \"\"\r\n        }\r\n        </div>\r\n        </div>\r\n        `\r\n        // membuat info window\r\n        const tempInfoWindow = document.createElement(\"div\");\r\n        tempInfoWindow.innerHTML = content;\r\n        const infoWindow = createCustomInfoWindow(tempInfoWindow);\r\n\r\n        // handler cctv normal ketika di klik\r\n        function cctvNormalClick(){\r\n            console.log(\"cctv normal clicked\");\r\n            window.location.href = \"/cctvnormal?url=\" + encodeURIComponent(cctvs[i].url);\r\n        }\r\n        \r\n        // handler cctv gedung ketika di klik\r\n        function cctvGedungClick(){\r\n            console.log(\"cctv gedung clicked\");\r\n            window.location.href = \"/cctvgedung/\" + (cctvs[i].id);\r\n        }\r\n\r\n        // menampilkan info window ketika marker cctv jalan di klik\r\n        if(cctvs[i].type === \"street\"){\r\n            marker.addListener(\"click\", () => {\r\n                if (currentInfoWindow) {\r\n                    currentInfoWindow.close();\r\n                }\r\n                infoWindow.open(map, marker);\r\n                currentInfoWindow = infoWindow;\r\n\r\n                // menambahkan event click pada button cctv normal\r\n                infoWindow.addListener('domready', () => {\r\n                // Now the content is part of the DOM and you can safely add the event listener\r\n                const cctvNormalButton = document.getElementById(\"cctvnormal\");\r\n                if (cctvNormalButton) {\r\n                    cctvNormalButton.addEventListener(\"click\", cctvNormalClick);\r\n                }\r\n        });\r\n            });\r\n        }\r\n\r\n        // menampilkan info window ketika marker cctv gedung di klik\r\n        if(cctvs[i].type === \"building\"){\r\n            marker.addListener(\"click\", () => {\r\n                if (currentInfoWindow) {\r\n                    currentInfoWindow.close();\r\n                }\r\n                infoWindow.open(map, marker);\r\n                currentInfoWindow = infoWindow;\r\n\r\n                // menambahkan event click pada button denah gedung\r\n                infoWindow.addListener('domready', () => {\r\n                    // Now the content is part of the DOM and you can safely add the event listener\r\n                    const denahButton = document.getElementById(\"denahButton\");\r\n                    if (denahButton) {\r\n                        denahButton.addEventListener(\"click\", cctvGedungClick);\r\n                    }\r\n                })\r\n            });\r\n        }\r\n\r\n        else{\r\n            marker.addListener(\"click\", () => {\r\n                if (currentInfoWindow) {\r\n                    currentInfoWindow.close();\r\n                }\r\n                infoWindow.open(map, marker);\r\n                currentInfoWindow = infoWindow;\r\n            })\r\n        }\r\n\r\n         // event listener untuk menutup infowindow\r\n         google.maps.event.addListener(map, \"click\", function () {\r\n            infoWindow.close();\r\n          }); \r\n    }catch (error) {\r\n        console.log(error);\r\n    }\r\n}\r\n    document.addEventListener(\"DOMContentLoaded\", initMap);\r\n    \r\n}\r\n\r\nwindow.initMap=initMap;\n\n//# sourceURL=webpack://cctv/./public/js/map.js?");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module can't be inlined because the eval devtool is used.
/******/ 	var __webpack_exports__ = {};
/******/ 	__webpack_modules__["./public/js/map.js"]();
/******/ 	
/******/ })()
;